const scenarioSchema = {
  type: 'scenario',
  version: '1.0',
  collection: 'scenarios',
  fields: [
    {
      name: 'id',
      type: 'string',
      required: true,
      generated: true,
      label: 'Scenario ID',
      description: 'Unique identifier for the scenario',
      editable: false,
    },
    {
      name: 'name',
      type: 'string',
      required: true,
      label: 'Scenario Name',
      description: 'Name of the scenario',
      validation: {
        minLength: 1,
        maxLength: 200,
      },
    },
    {
      name: 'referenceId',
      type: 'string',
      required: true,
      label: 'Reference ID',
      description: 'User-editable reference identifier',
      validation: {
        minLength: 1,
        maxLength: 100,
        pattern: '^[a-zA-Z0-9_-]+$',
      },
    },
    {
      name: 'description',
      type: 'text',
      required: false,
      label: 'Description',
      description: 'Detailed description of the scenario',
      validation: {
        maxLength: 2000,
      },
    },
    {
      name: 'image',
      type: 'file',
      required: false,
      label: 'Scenario Image',
      description: 'Image associated with the scenario',
      fileTypes: ['image/jpeg', 'image/png', 'image/webp'],
      maxSize: 5242880, // 5MB
    },
    {
      name: 'dialogueId',
      type: 'reference',
      referenceType: 'dialogue',
      required: true,
      label: 'Dialogue',
      description: 'Associated dialogue for this scenario',
    },
    {
      name: 'characterRoles',
      type: 'array',
      itemType: 'object',
      required: true,
      label: 'Character Roles',
      description: 'Character role assignments',
      schema: {
        roleId: {
          type: 'string',
          required: true,
          label: 'Role ID',
        },
        characterId: {
          type: 'reference',
          referenceType: 'character',
          required: true,
          label: 'Character',
        },
      },
      validation: {
        minItems: 1,
      },
    },
    {
      name: 'environmentId',
      type: 'reference',
      referenceType: 'environment',
      required: true,
      label: 'Environment',
      description: 'Associated environment for this scenario',
    },
    {
      name: 'playCount',
      type: 'number',
      required: true,
      label: 'Play Count',
      description: 'Number of times this scenario has been played',
      default: 0,
      editable: false,
      validation: {
        min: 0,
      },
    },
    {
      name: 'active',
      type: 'boolean',
      required: true,
      label: 'Active',
      description: 'Whether this scenario is currently active',
      default: true,
    },
    {
      name: 'companyId',
      type: 'string',
      required: true,
      label: 'Company ID',
      description: 'Company this scenario belongs to',
      generated: true,
      editable: false,
    },
    {
      name: 'createdBy',
      type: 'string',
      required: true,
      label: 'Created By',
      description: 'User who created this scenario',
      generated: true,
      editable: false,
    },
    {
      name: 'createdAt',
      type: 'timestamp',
      required: true,
      label: 'Created At',
      description: 'When this scenario was created',
      generated: true,
      editable: false,
    },
    {
      name: 'updatedAt',
      type: 'timestamp',
      required: true,
      label: 'Updated At',
      description: 'When this scenario was last updated',
      generated: true,
      editable: false,
    },
    {
      name: 'updatedBy',
      type: 'string',
      required: false,
      label: 'Updated By',
      description: 'User who last updated this scenario',
      generated: true,
      editable: false,
    },
  ],
};

module.exports = scenarioSchema;
